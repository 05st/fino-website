"use strict";(self.webpackChunkfino_website=self.webpackChunkfino_website||[]).push([[36],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,f=c["".concat(u,".").concat(m)]||c[m]||d[m]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9958:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>O,contentTitle:()=>E,default:()=>L,frontMatter:()=>C,metadata:()=>I,toc:()=>S});var a=n(7462),r=n(7294),i=n(3905),o=n(6010),l=n(2466),u=n(6550),s=n(1980),p=n(7392),c=n(12);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function f(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,u.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=m(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[u,s]=h({queryString:n,groupId:a}),[p,d]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),g=(()=>{const e=u??p;return f({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),s(e),d(e)}),[s,d,i]),tabValues:i}}var b=n(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function w(e){let{className:t,block:n,selectedValue:i,selectValue:u,tabValues:s}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),a=s[n].value;a!==i&&(c(t),u(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},l,{className:(0,o.Z)("tabs__item",k.tabItem,l?.className,{"tabs__item--active":i===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",k.tabList)},r.createElement(w,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function N(e){const t=(0,b.Z)();return r.createElement(v,(0,a.Z)({key:String(t)},e))}const x={tabItem:"tabItem_Ymn6"};function T(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(x.tabItem,a),hidden:n},t)}const C={sidebar_position:1.3},E="Hello, Fino!",I={unversionedId:"getting-started/hello-fino",id:"getting-started/hello-fino",title:"Hello, Fino!",description:"This tutorial aims to be beginner-friendly to people new to Fino, or new to the functional programming paradigm. It assumes some prior programming experience.",source:"@site/docs/getting-started/hello-fino.md",sourceDirName:"getting-started",slug:"/getting-started/hello-fino",permalink:"/getting-started/hello-fino",draft:!1,editUrl:"https://github.com/05st/fino-website/tree/main/docs/getting-started/hello-fino.md",tags:[],version:"current",sidebarPosition:1.3,frontMatter:{sidebar_position:1.3},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/getting-started/usage"},next:{title:"Expressions",permalink:"/basic-concepts/expressions"}},O={},S=[{value:"Writing the code",id:"writing-the-code",level:2},{value:"Running the program",id:"running-the-program",level:2},{value:"Some more",id:"some-more",level:2},{value:"Without <code>do</code> notation",id:"without-do-notation",level:3},{value:"An exercise",id:"an-exercise",level:3}],j={toc:S},V="wrapper";function L(e){let{components:t,...n}=e;return(0,i.kt)(V,(0,a.Z)({},j,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hello-fino"},"Hello, Fino!"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This tutorial aims to be beginner-friendly to people new to Fino, or new to the functional programming paradigm. It assumes some prior programming experience.")),(0,i.kt)("p",null,"Now that we've hopefully installed Fino correctly, it's time to test out the language - with the classic ",(0,i.kt)("em",{parentName:"p"},"Hello, Fino!")," program of course."),(0,i.kt)("p",null,"In this short section, we will:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Write a simple program which prints a message"),(0,i.kt)("li",{parentName:"ul"},"Extend it to take in user input"),(0,i.kt)("li",{parentName:"ul"},"Dip our toes in a few simple but powerful features of the language"),(0,i.kt)("li",{parentName:"ul"},"Get an idea of how it feels to write effectful code in Fino")),(0,i.kt)("h2",{id:"writing-the-code"},"Writing the code"),(0,i.kt)("p",null,"Get started by creating a new file, call it whatever you want, and preferably give it a ",(0,i.kt)("inlineCode",{parentName:"p"},".fn")," file extension. Open up the file in your favourite text editor and proceed by writing the following lines of code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-(jsx",metastring:'title="hello-world.fn" showLineNumbers)',title:'"hello-world.fn"',"showLineNumbers)":!0},'import prelude\n\nfn main : unit -> unit\n    () = println "Hello, Fino!"\n')),(0,i.kt)("p",null,"Click on a tab to understand what a specific line of code does:"),(0,i.kt)(N,{mdxType:"Tabs"},(0,i.kt)(T,{value:"line1",label:"Line 1",default:!0,mdxType:"TabItem"},(0,i.kt)("p",null,"This line imports the ",(0,i.kt)("inlineCode",{parentName:"p"},"prelude")," module from the standardlibrary, which in turn brings a small set of essential modules into scope, such as the ",(0,i.kt)("inlineCode",{parentName:"p"},"io")," module which we use ",(0,i.kt)("inlineCode",{parentName:"p"},"println")," from (on line 4).")),(0,i.kt)(T,{value:"line3",label:"Line 3",mdxType:"TabItem"},(0,i.kt)("p",null,"This line defines the variable ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," as a function which accepts a ",(0,i.kt)("inlineCode",{parentName:"p"},"unit")," as input and evaluates to a ",(0,i.kt)("inlineCode",{parentName:"p"},"unit")," as output. The ",(0,i.kt)("inlineCode",{parentName:"p"},"unit")," type only has one value - ",(0,i.kt)("inlineCode",{parentName:"p"},"()")," - so it is often used like this when a function only produces side effects and does not evaluate to anything useful (in this case, the ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," function only prints out a string).")),(0,i.kt)(T,{value:"line4",label:"Line 4",mdxType:"TabItem"},(0,i.kt)("p",null,"There's a few different things happening on this line."),(0,i.kt)("p",null,"First, on the left of the ",(0,i.kt)("inlineCode",{parentName:"p"},"=")," sign is a pattern. Specifically, it is a pattern which matches the ",(0,i.kt)("inlineCode",{parentName:"p"},"()")," literal. Pattern matching is covered in depth elsewhere in the documentation."),(0,i.kt)("p",null,"On the right of the ",(0,i.kt)("inlineCode",{parentName:"p"},"=")," sign is the body of the function, the expression which is evaluated when the function is called. In this case, the expression simply consists of the function ",(0,i.kt)("inlineCode",{parentName:"p"},"println")," being applied to a string literal. The function ",(0,i.kt)("inlineCode",{parentName:"p"},"println")," has a type of ",(0,i.kt)("inlineCode",{parentName:"p"},"str -> unit"),", so it takes in a ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," as input and evaluates into a ",(0,i.kt)("inlineCode",{parentName:"p"},"unit")," as output."))),(0,i.kt)("h2",{id:"running-the-program"},"Running the program"),(0,i.kt)("p",null,"As described in the previous section on usage, to compile the program use the following command:"),(0,i.kt)(N,{groupId:"os-cmd",mdxType:"Tabs"},(0,i.kt)(T,{value:"posix",label:"Linux / MacOS",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"fino -f hello-world.fn -o hello-world.bin\n"))),(0,i.kt)(T,{value:"windows",label:"Windows",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"fino -f hello-world.fn -o hello-world.exe\n")))),(0,i.kt)("p",null,"And then simply run the executable to run the program:"),(0,i.kt)(N,{groupId:"os-cmd",mdxType:"Tabs"},(0,i.kt)(T,{value:"posix",label:"Linux / MacOS",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"./hello-world.bin\n"))),(0,i.kt)(T,{value:"windows",label:"Windows",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"hello-world.exe\n")))),(0,i.kt)("br",null),(0,i.kt)("p",null,"You should see the following output:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Hello, Fino!\n")),(0,i.kt)("h2",{id:"some-more"},"Some more"),(0,i.kt)("p",null,"While writing a ",(0,i.kt)("em",{parentName:"p"},"Hello, Fino!")," program is fun, let's try exploring some more. Specifically, let's extend our program to take in user input, in the form of a name, and then output a greeting."),(0,i.kt)("p",null,"As before, create a new file, name it whatever you want, and give it a ",(0,i.kt)("inlineCode",{parentName:"p"},".fn")," file extension. Edit the file and write the following few lines of code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-(jsx",metastring:'title="greeting.fn" showLineNumbers)',title:'"greeting.fn"',"showLineNumbers)":!0},'fn main : unit -> unit\n    () = do\n        println "What is your name?"\n        let name = input ()\n        println ("Hello, " + name + "!")\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Currently, ",(0,i.kt)("inlineCode",{parentName:"p"},"do")," notation (and consequently ",(0,i.kt)("inlineCode",{parentName:"p"},"mdo"),") is only a planned feature and is not implemented in the compiler yet. To actually have a working program, look at the code ",(0,i.kt)("a",{parentName:"p",href:"#without-do-notation"},"below"),".")),(0,i.kt)("p",null,"Now we've introduced a few more language features: ",(0,i.kt)("inlineCode",{parentName:"p"},"do")," notation, ",(0,i.kt)("inlineCode",{parentName:"p"},"let")," bindings, and user-defined operators."),(0,i.kt)("p",null,"[WIP]"),(0,i.kt)("h3",{id:"without-do-notation"},"Without ",(0,i.kt)("inlineCode",{parentName:"h3"},"do")," notation"),(0,i.kt)("p",null,"Here is the same function written without ",(0,i.kt)("inlineCode",{parentName:"p"},"do")," notation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-(jsx",metastring:'title="greeting.fn" showLineNumbers)',title:'"greeting.fn"',"showLineNumbers)":!0},'import prelude\n\nfn main : unit -> unit\n    () =\n        let _ = println "What is your name?" in\n        let name = input () in\n        println ("Hello, " + name + "!")\n')),(0,i.kt)("h3",{id:"an-exercise"},"An exercise"))}L.isMDXComponent=!0}}]);